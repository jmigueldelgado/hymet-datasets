


#' get ncdf from NCEP and pass it as dataframe
#' @param pt an sf point object in lat long
#' @param lubri a lubridate object or a list of two objects defining the time domain or the query
#' @importFrom lubridate year
#' @import dplyr
#' @import ncdf4
#' @export
get_nc <- function(request_all)
{
    for(f in distinct(request_all,fname) %>% pull)
    {
        DF <- list()
        request <- request_all %>%
            filter(fname==f)
        for(i in seq(1,nrow(request))
        {
            fname <- request$fname[i]
            prefix <- request$prefix[i]
            if(!file.exists(fname))
            {
                system(paste0("wget ",prefix,fname))
            }
            
            if(file.exists(fname))
            {
                
                nc=nc_open(fname)
                tt=ncvar_get(nc,varid="time")
                tformat= ymd_hms("1800-01-01 00:00:00")+hours(tt)
                
                lat=ncvar_get(nc,varid="lat")
                lon=ncvar_get(nc,varid="lon")
                gr=expand.grid(lon,lat)
                colnames(gr) <- c("lon","lat")
                grsf <- st_as_sf(gr,coords=c(1,2)) %>% st_set_crs(.,4326)
                ncpt=grsf[which.min(st_distance(grsf,request[i,])),]
                nlon=which(lon==st_coordinates(ncpt)[1])
                nlat=which(lat==st_coordinates(ncpt)[2])
                
                x <- ncvar_get(nc,request$varname[i],start=c(nlon,nlat,1),count=c(1,1,-1))
                df <- data.frame(time=tformat,var=request$varname[i],value=x)
            } else {cat("problems downloading from NCEP server")}
            nc_close(nc)
        }
        
    
    }
          
    return(df)
}


#' lookup variable names in NCEP
#' @param var a meteorological variable name as a string such as 'temperature','relative humidity','u wind','v wind','soil heat flux','net radiation','precipitation rate'
#' @import dplyr
#' @export
lookup_var <- function(var)
{
    lookup <- data_frame(variable=c('temperature','relative humidity','u wind','v wind','soil heat flux','net radiation','precipitation rate'),varname=c('air','rhum','uwnd','vwnd','gflux','dswrf','prate')) %>%
        filter(variable %in% var)
    return(lookup)
}

#' @import dplyr, sf
#' @importFrom tidyr crossing
#' @return request
#' @export
def_request <- function(coor,var,years)
{
    years=data_frame(year=seq(2010,2013))
    var <- c('relative humidity','temperature')
    lookup <- lookup_var(var) %>%
        left_join(.,getPrefix())
    
    pt <- data.frame(longitude=coor[,1],latitude=coor[,2]) %>% 
        st_as_sf(.,coords=c(1,2)) %>%
        st_set_crs(.,4326)

    request <- crossing(years,lookup,pt)
    return(request)
}

#' importFrom tibble data_frame
#' @export
getPrefix <- function()
{   
    prefix=data_frame(varname=c('air','rhum','uwnd','vwnd','prate','gflux','dswrf'),
               prefix=c('ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis/surface_gauss/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis/surface/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis/surface/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis/surface/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis.dailyavgs/surface_gauss/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis.dailyavgs/surface_gauss/',
                        'ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis.dailyavgs/surface_gauss/'),
               fname=c('air.2m.gauss',
                       'rhum.sig995',
                       'uwnd.sig995',
                       'vwnd.sig995',
                       'prate.sfc.gauss',
                       'gflux.sfc.gauss',
                       'dswrf.sfc.gauss'))
    return(prefix)
}




df <- do.call("rbind",DF)
DF[[as.character(yeari)]] <- get_nc(pt,prefix,fname,varname)

saveRDS(df,paste0(varname,".rds"))
